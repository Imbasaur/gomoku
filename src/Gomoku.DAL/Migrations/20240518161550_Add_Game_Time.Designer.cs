// <auto-generated />
using System;
using Gomoku.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Gomoku.DAL.Migrations
{
    [DbContext(typeof(GomokuDbContext))]
    [Migration("20240518161550_Add_Game_Time")]
    partial class Add_Game_Time
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Gomoku.DAL.Entities.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("BlackLastMoveTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("BlackName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("BlackTime")
                        .HasColumnType("numeric");

                    b.Property<Guid>("Code")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsBlackConnected")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsWhiteConnected")
                        .HasColumnType("boolean");

                    b.Property<string>("Moves")
                        .HasColumnType("text");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("State")
                        .HasColumnType("integer");

                    b.Property<decimal>("Time")
                        .HasColumnType("numeric");

                    b.Property<int>("Variant")
                        .HasColumnType("integer");

                    b.Property<uint>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("xid")
                        .HasColumnName("xmin");

                    b.Property<DateTime?>("WhiteLastMoveTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("WhiteName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("WhiteTime")
                        .HasColumnType("numeric");

                    b.Property<string>("Winner")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("Gomoku.DAL.Entities.PlayerWaiting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ConnectionId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PlayerName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PlayerName")
                        .IsUnique();

                    b.ToTable("WaitingList");
                });
#pragma warning restore 612, 618
        }
    }
}
